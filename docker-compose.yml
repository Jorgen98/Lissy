services:
  proxy:
    container_name: lissy-proxyServer
    image: nginx:1.19
    depends_on:
      db-postgis:
        condition: service_healthy
      db-stats:
        condition: service_healthy
    ports:
      - 7000:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
  fe:
    container_name: lissy-fe
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    depends_on:
      db-postgis:
        condition: service_healthy
      db-stats:
        condition: service_healthy
    environment:
      TZ: "Europe/Bratislava"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  be-processing:
    container_name: lissy-be-processing
    build:
      context: ./
      dockerfile: ./backend/Dockerfile-be-processing
    depends_on:
      db-postgis:
        condition: service_healthy
      db-stats:
        condition: service_healthy
    environment:
      TZ: "Europe/Bratislava"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  be-api:
    container_name: lissy-be-api
    build:
      context: ./
      dockerfile: ./backend/Dockerfile-be-api
    depends_on:
      db-postgis:
        condition: service_healthy
      db-stats:
        condition: service_healthy
    environment:
      TZ: "Europe/Bratislava"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  db-postgis:
    container_name: lissy-db-postgis
    image: postgis/postgis:16-master
    volumes:
      - ./env/db-postgis-init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db-postgis-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_POSTGIS_USER}
      POSTGRES_PASSWORD: ${DB_POSTGIS_PASSWORD}
      POSTGRES_DB: ${DB_POSTGIS_DATABASE}
      PGPORT: 5432
      PGUSER: ${DB_POSTGIS_USER}
      TZ: "Europe/Bratislava"
    deploy:
      restart_policy:
        condition: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_POSTGIS_DATABASE} -U ${DB_POSTGIS_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
  db-stats:
    container_name: lissy-db-stats
    image: influxdb:2.7
    volumes:
      - ./db-stats-data:/var/lib/influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${DB_STATS_USER}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${DB_STATS_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${DB_STATS_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${DB_STATS_BUCKET}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${DB_STATS_TOKEN}
      INFLUXDB_BIND_ADDRESS: 0.0.0.0:8088
    deploy:
      restart_policy:
        condition: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    healthcheck:
      test: influx ping
      interval: 5s
      timeout: 5s
      retries: 5